<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.nebula.admin.service.dao.mapper.UserMapper">

    <sql id="Base_Column_List">
        id, username, nickname, accessId, email, mobile, admin, status,
        createdDate, modifiedDate
    </sql>

    <sql id="Column_List_With_Secret">
        <include refid="Base_Column_List"/>, secretKey
    </sql>

    <select id="findByName" resultType="User" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from `user`
        where username = #{username}
    </select>

    <insert id="insert" parameterType="User" useGeneratedKeys="true"
            keyProperty="id">
        insert into `user` (username, nickname, accessId, password, secretKey, email, mobile, admin,
        status, createdDate, modifiedDate)
        values ( #{username},
        #{nickname}, #{accessId}, #{password}, #{secretKey}, #{email},#{mobile},
        #{admin}, #{status}, now(), now())
    </insert>

    <update id="update" parameterType="User">
        update `user`
        set
        <if test="nickname != null">
            nickname=#{nickname},
        </if>
        <if test="email != null">
            email= #{email},
        </if>
        <if test="mobile != null">
            mobile=#{mobile},
        </if>
        <if test="status != null">
            status=#{status},
        </if>
        modifiedDate=now()
        where username = #{username}
    </update>

    <update id="changePassword">
        update `user`
        set password=#{newPassword}
        where username = #{username} and password=#{oldPassword}
    </update>

    <update id="changeSecretKey">
        update `user`
        set secretKey=#{secretKey}
        where username = #{username} and password=#{password}
    </update>

    <select id="findSecretKeyByName" resultType="String">
        select secretKey
        from `user`
        where username = #{username}
    </select>

    <select id="findByUsernameAndPassword" resultType="User">
        select
        <include refid="Base_Column_List"/>
        from `user`
        where username = #{username} and password=#{password}
    </select>

    <select id="search" resultType="User" parameterType="String">
        select
        <include refid="Base_Column_List"/>
        from `user` where
        <if test="username != null and username !=''">
            username like CONCAT('', #{username},'%') and
        </if>
        admin=0 order by id DESC
    </select>

    <select id="countByUsername" resultType="int" parameterType="String">
        select count(1)
        from `user` where
        <if test="username != null and username !=''">
            username like CONCAT('', #{username},'%') and
        </if>
        admin=0
    </select>

    <delete id="delete" parameterType="String">
        delete from `user` where username=#{username}
    </delete>

    <select id="findByDomain" resultType="User" parameterType="String">
        select
        <include refid="Column_List_With_Secret"/>
        from `user` where username in (select username from userdomain where domainName like
        CONCAT('%', #{domainName},'%') ) and status=1
    </select>

</mapper>